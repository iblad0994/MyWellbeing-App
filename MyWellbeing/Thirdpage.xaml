<Window x:Class="MyWellbeing.Thirdpage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyWellbeing"
        mc:Ignorable="d" Height="659.945" Width="1214.853" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="1" Height="33" Width="Auto">
                                <Grid x:Name="markGrid" Margin="4,2,-1,-1">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="-6,-12,10,10" Opacity="0" RenderTransformOrigin="0.226,0.138"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Margin="-2,1,3,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="1" Height="33" Width="Auto">
                                <Grid x:Name="markGrid" Margin="4,2,-1,-1">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="-6,-12,10,10" Opacity="0" RenderTransformOrigin="0.226,0.138"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="-16,-8,-1,-7" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="31" Width="35">
                                <Grid x:Name="markGrid" Margin="-7,-7,-18,-8" RenderTransformOrigin="0.365,1.673">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="8" Opacity="0" Stretch="Uniform" SnapsToDevicePixels="True" ClipToBounds="True" HorizontalAlignment="Left" VerticalAlignment="Top" AutomationProperties.IsOffscreenBehavior="Default"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="22,-34,1,48" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="16,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="16" Width="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle3" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="21"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="-14,-9,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="31" Width="36" Grid.ColumnSpan="1" Grid.RowSpan="1">
                                <Grid x:Name="markGrid" Margin="7,9,-99,-1" RenderTransformOrigin="0.365,1.673">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="0,1,1,1" Opacity="0" Stretch="Fill" HorizontalAlignment="Right" Width="121"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="22,-34,1,48" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="16,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="16" Width="0" Grid.ColumnSpan="1" Grid.RowSpan="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle4" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="-216,-9,0,-6" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="31" Width="155">
                                <Grid x:Name="markGrid" Margin="7,9,-32,-24" RenderTransformOrigin="0.365,1.673">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="22,-34,1,48" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="16,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="16" Width="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle5" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,0,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="1" Height="33" Width="Auto">
                                <Grid x:Name="markGrid" Margin="4,2,-1,-1">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="-2,-4,6,2" Opacity="0" RenderTransformOrigin="0.226,0.138"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle6" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,0,10,0" RenderTransformOrigin="0.106,0.579">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="1" Height="33" Width="Auto">
                                <Grid x:Name="markGrid" Margin="4,2,-1,-1">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="-2,-4,6,2" Opacity="0" RenderTransformOrigin="0.226,0.138"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="0,0,-6,77">
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TabControl  x:Name="ParentTab" HorizontalAlignment="Left"  Width="1208" Margin="0,116,0,-55" Background="{x:Null}" Visibility="Visible"  SelectionChanged="ParentTab_SelectionChanged_1" BorderBrush="{x:Null}" IsSynchronizedWithCurrentItem="True">
            <TabItem x:Name="tabWeightMgt" Header="Weight " Margin="7,34,-72,-61" Background="#FFA09D9D" FontWeight="Bold" IsSelected="True" Foreground="#FF0C0102" FontSize="18" BorderBrush="#FFEB8200">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid x:Name="tabWeightManagement" Visibility="Visible" Margin="1,60,2,-35">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FFEEFFFE" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnWeight" Content="Weight Management Programs" HorizontalAlignment="Left" Margin="102,62,0,0" VerticalAlignment="Top" Width="278" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click" Height="58" MouseEnter="btnWeight_MouseEnter">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Professional weight management support (e.g. Weight Watchers)" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Nutrition Education" HorizontalAlignment="Left" Margin="496,62,0,0" VerticalAlignment="Top" Width="216" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_1" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Learn about the many health benefits of good nutrition and simple lifestyle tips" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Activity Challenge" HorizontalAlignment="Left" Margin="835,62,0,0" VerticalAlignment="Top" Width="218" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_2" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Join a program to jumpstart your active lifestyle individually or as a team" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Healthy Food Options" HorizontalAlignment="Left" Margin="835,144,0,0" VerticalAlignment="Top" Width="218" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_3" Height="58" RenderTransformOrigin="-0.102,2.008">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Let us help you make the best food choices for a healthy you" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Nutrition Challenge" HorizontalAlignment="Left" Margin="102,144,0,0" VerticalAlignment="Top" Width="278" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_4" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Join a program to develop lifelong healthy nutrition habits" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Mobile Apps" HorizontalAlignment="Left" Margin="496,144,0,0" VerticalAlignment="Top" Width="216" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_5" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Resources for a healthy lifestyle on the go" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="On-site Fitness Offers" HorizontalAlignment="Left" Margin="496,224,0,0" VerticalAlignment="Top" Width="216" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_6" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Convenient onsite fitness classes to enhance your active lifestyle" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="ActiveHealth coaching" HorizontalAlignment="Left" Margin="102,224,0,0" VerticalAlignment="Top" Width="278" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_7" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Personalized one-on - one or group coaching by nutrition professionals" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Upcoming Activity Events" HorizontalAlignment="Left" Margin="835,224,0,0" VerticalAlignment="Top" Width="218" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Click_8" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Up to date resources for local fitness events" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" HorizontalAlignment="Left" Margin="985,295,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button x:Name="___No_Name_" Content="Finish" HorizontalAlignment="Left" Margin="1075,296,0,0" VerticalAlignment="Top" Width="74" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_wightmgtR" Content="" HorizontalAlignment="Left" Margin="81,82,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_NutriChallR" Content="" HorizontalAlignment="Left" Margin="80,168,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_ActiveHealthR" Content="" HorizontalAlignment="Left" Margin="79,247,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_NutriEducationR" Content="" HorizontalAlignment="Left" Margin="471,84,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_MobileAppR" Content="" HorizontalAlignment="Left" Margin="471,168,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_OnSiteFitR" Content="" HorizontalAlignment="Left" Margin="471,249,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_ActivChallR" Content="" HorizontalAlignment="Left" Margin="813,86,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_HealthFoodR" Content="" HorizontalAlignment="Left" Margin="813,170,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>
                    <CheckBox x:Name="chk_UpcomingR" Content="" HorizontalAlignment="Left" Margin="813,251,0,0" VerticalAlignment="Top" RenderTransformOrigin="-1.316,0.967" Width="18" IsChecked="True"/>


                </Grid>
            </TabItem>
            <TabItem x:Name="tabQuitSmoking" Header="Tobacco-Free" Margin="76,34,-85,-60" FontWeight="Bold" BorderBrush="#FFEB8200" RenderTransformOrigin="0.293,0.567" Background="#FFA09D9D" FontSize="18" IsSelected="True">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,62,0,-2">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48*"/>
                        <ColumnDefinition Width="239*"/>
                        <ColumnDefinition Width="702*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee" Content="Blue Cross Blue Shield Quit line" HorizontalAlignment="Left" Margin="46,97,0,0" VerticalAlignment="Top" Width="434" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="btn_bluecross" Grid.Column="2" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Get the right tools and support to enjoy a tobacco-free life" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy" Content="Optum Health program Referral" HorizontalAlignment="Left" Margin="46,187,0,0" VerticalAlignment="Top" Width="434" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="btngee" Grid.Column="2" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Join the Quit For Life program in collaboration with the American Red cross" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="2" HorizontalAlignment="Left" Margin="621,279,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6">
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-0.813"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>
                    </Button>
                    <Button Content="Finish" Grid.Column="2" HorizontalAlignment="Left" Margin="709,280,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_BlueCrossR" Content="" Grid.Column="2" HorizontalAlignment="Left" Margin="22,119,0,0" VerticalAlignment="Top" IsChecked="True"/>
                    <CheckBox x:Name="chk_OptumHealthR" Content="" Grid.Column="2" HorizontalAlignment="Left" Margin="22,211,0,0" VerticalAlignment="Top" IsChecked="True"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabReduceStress" Header="Stress" Margin="90,35,-155,-60" FontWeight="Bold" BorderBrush="#FFEB8200" Background="#FFA09D9D" FontSize="18">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,60,0,-21">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FFEEFFFE" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48*"/>
                        <ColumnDefinition Width="242*"/>
                        <ColumnDefinition Width="699*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee_Copy1" Content="On-site Massage" HorizontalAlignment="Left" Margin="31,54,0,0" VerticalAlignment="Top" Width="260" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Clickss" Height="58" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="De-stress with our onsite licensed massage therapists" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy2" Content="Stress Tool Box" HorizontalAlignment="Left" Margin="31,130,0,0" VerticalAlignment="Top" Width="260" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Clicksd" Height="58" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Resources to achieve a lower stress lifestyle" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Optum Health Referral (EAP)" HorizontalAlignment="Left" Margin="31,211,0,0" VerticalAlignment="Top" Width="260" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="Button_Cdlick_5" Height="62" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Receive access to online and local resources for dealing with stress and related issues" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy3" Content="ActiveHealth Coaching Program" HorizontalAlignment="Left" Margin="108,53,0,0" VerticalAlignment="Top" Width="286" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="btn_act" Grid.Column="2" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="One-on-one stress management coaching and information" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Activity Challenge" HorizontalAlignment="Left" Margin="108,125,0,0" VerticalAlignment="Top" Width="286" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="bButton_Click_5" Height="62" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Burn off your stress with good-natured competition and activity" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy4" Content="On-site Fitness Offers" HorizontalAlignment="Left" Margin="108,214,0,0" VerticalAlignment="Top" Width="286" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="ppButton_Click" Height="58" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Convenient onsite fitness classes provide a perfect outlet for your stress" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Mindfulness videos" HorizontalAlignment="Left" Margin="510,53,0,0" VerticalAlignment="Top" Width="214" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="oButton_Click_5" Height="58" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Learn the practice of focusing on the present moment to decrease stress and anxiety" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="2" HorizontalAlignment="Left" Margin="623,288,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button x:Name="___No_Name_1" Content="Finish" Grid.Column="2" HorizontalAlignment="Left" Margin="712,289,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_OnSiteMassage" Content="" HorizontalAlignment="Left" Margin="10,79,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_StressToolBox" Content="" HorizontalAlignment="Left" Margin="10,155,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_OptumHealthReferral" Content="" HorizontalAlignment="Left" Margin="10,233,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_ActiveHealthCoachingProgram" Content="" HorizontalAlignment="Left" Margin="84,78,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_ActivityChallengesec" Content="" HorizontalAlignment="Left" Margin="84,154,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_OnSiteFitnessOfferssec" Content="" HorizontalAlignment="Left" Margin="84,232,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_MindfullnessVideo" Content="" HorizontalAlignment="Left" Margin="488,78,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabImproveHyd" Header="Hydration" Margin="158,36,-206,-60" FontWeight="Bold" Foreground="#FF080A00" FontSize="18" BorderBrush="#FFEB8200" Background="#FFA09D9D">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,61,0,-3">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="23*"/>
                        <ColumnDefinition Width="47*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="iibtnsee_Copy5" Content="Mobile Apps" HorizontalAlignment="Left" Margin="51.833,62,0,0" VerticalAlignment="Top" Width="332" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="loButton_Click" Height="58" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Convenient hydration support in the palm of your hand" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy6" Content="Health Challenge" HorizontalAlignment="Left" Margin="51.833,138,0,0" VerticalAlignment="Top" Width="332" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="btn_clickers" Height="58" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Engaging activities that help you build a healthy hydration habit" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="General Hydration Information" HorizontalAlignment="Left" Margin="51.833,220,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="gfButton_Click_5" Height="62" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Resources detailing specifics on hydration" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" HorizontalAlignment="Left" Margin="624.833,282,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6" Grid.Column="1"/>
                    <Button Content="Finish" HorizontalAlignment="Left" Margin="713.833,283,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10" Grid.Column="1"/>
                    <CheckBox x:Name="chk_HydrationMobileApps" Content="" HorizontalAlignment="Left" Margin="26.833,86,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_HydraHealthChallenge" Content="" HorizontalAlignment="Left" Margin="26.833,166,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_HydraGeneralHydrationInfo" Content="" HorizontalAlignment="Left" Margin="26.833,246,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabImproveStamina" Header="Physical Activity" Margin="212,35,-222,-59" FontWeight="Bold" Background="#FFA09D9D" BorderBrush="#FFEB8200" FontSize="18" HorizontalAlignment="Left" Width="149">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,62,0,-2">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="58*"/>
                        <ColumnDefinition Width="448*"/>
                        <ColumnDefinition Width="13*"/>
                        <ColumnDefinition Width="671*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee_Copy7" Content="Activity Challenge" HorizontalAlignment="Left" Margin="122,97,0,0" VerticalAlignment="Top" Width="332" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="cebtn" Height="58" Grid.Column="1" Grid.ColumnSpan="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Join a program to jumpstart your active lifestyle individually or as a team" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy8" Content="Upcoming Activity Events" HorizontalAlignment="Left" Margin="191.44,189,0,0" VerticalAlignment="Top" Width="332" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="erty" Height="58" Grid.Column="3">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="An up-to-date listing of local fitness-related events" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="On-site Fitness Offers" HorizontalAlignment="Left" Margin="122,187,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="frre" Height="62" Grid.Column="1" Grid.ColumnSpan="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Convenient onsite fitness classes to enhance your active lifestyle" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="CROP Walk" HorizontalAlignment="Left" Margin="191.44,95,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="vtrt" Height="62" Grid.Column="3">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Bring your family and join with other Syngenta employees in this active outing event" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="3" HorizontalAlignment="Left" Margin="465.44,288,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button Content="Finish" Grid.Column="3" HorizontalAlignment="Left" Margin="554.44,289,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_BeMoreActivityChall" Content="" HorizontalAlignment="Left" Margin="100,125,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_BeMoreOnsiteFitness" Content="" HorizontalAlignment="Left" Margin="100,221,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_BeMoreCropWalk" Content="" HorizontalAlignment="Left" Margin="169.44,121,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="3"/>
                    <CheckBox x:Name="chk_BeMoreUpcomingActivity" Content="" HorizontalAlignment="Left" Margin="169.44,217,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="3"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabFinancial" Header="Finances" Margin="214,35,-278,-59" FontWeight="Bold" RenderTransformOrigin="1.121,0.43" BorderBrush="#FFEB8200" FontSize="18" Background="#FFA09D9D">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,60,-2,-14">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="67*"/>
                        <ColumnDefinition Width="822*"/>
                        <ColumnDefinition Width="472*"/>
                        <ColumnDefinition Width="21*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee_Copy11" Content="Optum Health Referral (EAP)" HorizontalAlignment="Left" Margin="392,111,0,0" VerticalAlignment="Top" Width="332" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="dfegf" Height="58" Grid.Column="1" Grid.ColumnSpan="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Receive access to online and local resources for coping with emotional issues" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="T. Rowe Price Benefits Page" HorizontalAlignment="Left" Margin="392,191,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="def" Height="62" Grid.Column="1" Grid.ColumnSpan="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Learn more about this company benefit" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="2" HorizontalAlignment="Left" Margin="198,286,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button Content="Finish" Grid.Column="2" HorizontalAlignment="Left" Margin="287,287,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_FinancOptumHealthReff" Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="369,137,0,0" VerticalAlignment="Top" IsChecked="True"/>
                    <CheckBox x:Name="chk_FinancTRowePrice" Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="369,219,0,0" VerticalAlignment="Top" IsChecked="True"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabAhealthyYou" Header="A Healthy You" Margin="282,35,-287,-60" FontWeight="Bold" RenderTransformOrigin="1.121,0.43" FontSize="18" Background="#FFA09D9D" BorderBrush="#FFEB8200">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid x:Name="tab2A_Healthy_You" Margin="0,61,0,-14">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80*"/>
                        <ColumnDefinition Width="1479*"/>
                        <ColumnDefinition Width="93*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee_Copy14" Content="On-site Flu Vaccinations" HorizontalAlignment="Left" Margin="141,281,0,0" VerticalAlignment="Top" Width="332" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="cfdfvr" Height="58" Grid.Column="1" Visibility="Hidden">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Dates and times of when you can receive your flu shot" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy15" Content="One-on-one Health Coaching" HorizontalAlignment="Left" Margin="392,177,0,0" VerticalAlignment="Top" Width="353" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="dff" Height="58" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Contact information to schedule personal health coaching" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Online Health Assessment Questionnaire" HorizontalAlignment="Left" Margin="138,95,0,0" VerticalAlignment="Top" Width="353" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="ere" Height="62" Grid.Column="1">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Complete this questionnaire to get a snapshot of your current state of health and to receive tips on improvements" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy16" Content="General Health Information" HorizontalAlignment="Left" Margin="633,93,0,0" VerticalAlignment="Top" Width="332" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="drrgg" Grid.Column="1" Height="58">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Access to details on a variety of health-related information" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Upcoming Health Screenings" HorizontalAlignment="Left" Margin="565,277,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="ffg" Height="62" Grid.Column="1" Visibility="Hidden">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Listing of all scheduled health screenings with Health Services" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="1" HorizontalAlignment="Left" Margin="921,294,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button Content="Finish" Grid.Column="1" HorizontalAlignment="Left" Margin="1010,295,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10" Grid.ColumnSpan="2"/>
                    <CheckBox x:Name="chk_AHealtOnsiteFluVacci" Content="" HorizontalAlignment="Left" Margin="118,295,0,0" VerticalAlignment="Top" Grid.Column="1" Visibility="Hidden"/>
                    <CheckBox x:Name="chk_AHealtOneononeHealth" Content="" HorizontalAlignment="Left" Margin="366,201,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_AHealtGenerHealthINFO" Content="" HorizontalAlignment="Left" Margin="610,117,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                    <CheckBox x:Name="chk_AHealtUpcomHealthscree" Content="" HorizontalAlignment="Left" Margin="542,310,0,0" VerticalAlignment="Top" Grid.Column="1" Visibility="Hidden"/>
                    <CheckBox x:Name="chk_AHealtOnlineHealthAsees" Content="" HorizontalAlignment="Left" Margin="114,117,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabWorkLife" Header="Work/Life Balance" Margin="292,34,-293,-60" RenderTransformOrigin="0.709,0.395" Foreground="Black" FontWeight="Bold" Background="#FFA09D9D" FontSize="18" BorderBrush="#FFEB8200">
                <TabItem.BindingGroup>
                    <BindingGroup/>
                </TabItem.BindingGroup>
                <Grid Margin="0,60,4,-14">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48*"/>
                        <ColumnDefinition Width="56*"/>
                        <ColumnDefinition Width="893*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnsee_Copy12" Content="Stress Tool Box" HorizontalAlignment="Left" Margin="112,90,0,0" VerticalAlignment="Top" Width="332" Background="#FF5F7800" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="fdgrgh" Height="58" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Resources to achieve a lower stress lifestyle" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnsee_Copy13" Content="General Health Information" HorizontalAlignment="Left" Margin="592,184,0,0" VerticalAlignment="Top" Width="332" Background="#FFEB8200" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="ddsgdg" Height="58" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Access to details on a variety of health-related information" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Join Employee Resource Group (ERG)" HorizontalAlignment="Left" Margin="112,180,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="sasdw" Height="62" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Link with others that maintain similar beliefs, practices, and visions through this Diversity and Inclusion program" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Reaping Rewards Facebook Page" HorizontalAlignment="Left" Margin="596,90,0,0" VerticalAlignment="Top" Width="332" Background="#FF00A0BE" FontSize="20" FontWeight="Bold" FontFamily="Calibri" Click="ddfdf" Height="62" Grid.Column="2">
                        <Button.Effect>
                            <DropShadowEffect/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Receive instructional and inspirational tips on health and wellness" VerticalAlignment="Top"/>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Back &lt;&lt;" Grid.Column="2" HorizontalAlignment="Left" Margin="866,295,0,0" VerticalAlignment="Top" Width="78" Height="32" FontSize="16" FontWeight="Bold" Click="Button_Click_9" RenderTransformOrigin="-0.237,0.25" Background="#FFF9F9F6"/>
                    <Button Content="Finish" Grid.Column="2" HorizontalAlignment="Left" Margin="955,296,0,0" VerticalAlignment="Top" Width="75" Height="31" FontSize="16" Click="Button_Click_10"/>
                    <CheckBox x:Name="chk_Work_LIStressToolBox" Content="" HorizontalAlignment="Left" Margin="91,118,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_Work_LIJoinEmployee" Content="" HorizontalAlignment="Left" Margin="91,208,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_Work_LIReapingFacebookPage" Content="" HorizontalAlignment="Left" Margin="573,118,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                    <CheckBox x:Name="chk_Work_LIGeneralHealthInfo" Content="" HorizontalAlignment="Left" Margin="573,208,0,0" VerticalAlignment="Top" IsChecked="True" Grid.Column="2"/>
                </Grid>
            </TabItem>


        </TabControl>
        <TextBox x:Name="txt_EmailIntermediate" HorizontalAlignment="Left" Height="23" Margin="813,10,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="120" Visibility="Hidden"/>
        <TextBlock HorizontalAlignment="Left" Margin="14,120,0,0" TextWrapping="Wrap" Text="Based on your selections, we will send you information on the following programs " VerticalAlignment="Top" Height="31" Width="953" FontSize="22" FontWeight="Bold"/>
        <Image Margin="3,2,1098,443" Source="Image33.png" Stretch="Fill"/>
        <TextBlock HorizontalAlignment="Left" Margin="107,220,0,0" TextWrapping="Wrap" Text="Please click on each topic for details and uncheck those you are not interested in:" VerticalAlignment="Top" Height="31" Width="981" FontSize="22" FontWeight="Bold" Foreground="White"/>
        <Image Margin="128,10,552,451" Source="Image34.png" Stretch="Fill"/>
        <Image Margin="0,554,7,-78" Source="Image42.png" Stretch="Fill"/>
        <Image Margin="1066,575,32,-62" Source="Picture5.png" Stretch="Fill"/>

    </Grid>
</Window>
